{"ast":null,"code":"var _jsxFileName = \"/Users/kc/Thinkful/Project_Flashcards_Qualified_1/src/Layout/DeckEdit.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { Link, useHistory, useParams } from \"react-router-dom\";\nimport { updateDeck, readDeck } from \"../utils/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DeckEdit() {\n  _s();\n\n  const {\n    deckId\n  } = useParams();\n  const history = useHistory();\n  const state = {\n    Name: \"\",\n    Description: \"\"\n  };\n  const [formData, setFormData] = useState(state);\n  const [currentDeck, setCurrentDeck] = useState(null);\n  const [deck, setDeck] = useState({}); //const [name, setName] = useState(\"Loading...\")\n  //const [description, setDescription] = useState(\"Loading...\")\n\n  useEffect(() => {\n    async function loadDeck() {\n      setCurrentDeck([]);\n\n      try {\n        const newDeck = await readDeck(deckId);\n        setDeck(() => newDeck);\n        setFormData({\n          id: deckId,\n          name: newDeck.Name,\n          description: newDeck.Description\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    loadDeck();\n  }, [deckId]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const deck = await updateDeck(formData);\n    history.push(`/decks/${deck.id}`);\n  };\n\n  const handleChange = event => {\n    setFormData({ ...formData,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const handleCancel = e => {\n    e.preventDefault();\n    history.push(`/decks/${currentDeck.id}`);\n  };\n\n  if (currentDeck) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), \" / \", /*#__PURE__*/_jsxDEV(Link, {\n          to: `/decks/${deckId}`,\n          children: deck.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 48\n        }, this), \" / Edit Deck\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Edit Deck\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          required: true,\n          onChange: handleChange,\n          value: formData.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          required: true,\n          onChange: handleChange,\n          value: formData.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCancel,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 12\n  }, this);\n}\n\n_s(DeckEdit, \"bSQ0JVpu1T5/kFI8GziUsXL0kJ8=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = DeckEdit;\nexport default DeckEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeckEdit\");","map":{"version":3,"sources":["/Users/kc/Thinkful/Project_Flashcards_Qualified_1/src/Layout/DeckEdit.js"],"names":["React","useState","useEffect","Link","useHistory","useParams","updateDeck","readDeck","DeckEdit","deckId","history","state","Name","Description","formData","setFormData","currentDeck","setCurrentDeck","deck","setDeck","loadDeck","newDeck","id","name","description","error","console","log","handleSubmit","e","preventDefault","push","handleChange","event","target","value","handleCancel"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { Link, useHistory, useParams } from \"react-router-dom\";\nimport { updateDeck, readDeck } from \"../utils/api\";\n\nfunction DeckEdit() {    \n    const {deckId} = useParams();\n    const history = useHistory();\n    const state = {Name: \"\", Description: \"\"}\n    const [formData, setFormData]= useState(state);\n\n    const [currentDeck, setCurrentDeck] = useState(null)\n    const [deck, setDeck]= useState({});\n    //const [name, setName] = useState(\"Loading...\")\n    //const [description, setDescription] = useState(\"Loading...\")\n\n    useEffect(() => {\n        async function loadDeck() {\n            setCurrentDeck([]);\n            try {\n                const newDeck = await readDeck(deckId);\n                setDeck(()=> newDeck);\n                setFormData({\n                    id:deckId,\n                    name: newDeck.Name,\n                    description:newDeck.Description,\n                })\n            } catch (error) {console.log(error)}\n        }\n        loadDeck()\n    }, [deckId]);\n\n    const handleSubmit = async(e) => {\n        e.preventDefault();\n        const deck = await updateDeck(formData);\n            history.push(`/decks/${deck.id}`)\n        }\n    \n    const handleChange = (event) => {\n        setFormData({ ...formData, [event.target.name]: event.target.value });\n      };\n\n    const handleCancel = (e) => {\n        e.preventDefault();\n        history.push(`/decks/${currentDeck.id}`)\n    }\n\n    if(currentDeck){\n        return (\n            <div>\n                <div>\n                    <Link to=\"/\">Home</Link> / <Link to={`/decks/${deckId}`}>{deck.name}</Link> / Edit Deck\n                </div>\n                <h2>Edit Deck</h2>\n                <form onSubmit={handleSubmit}>\n                    \n                    <label>Name</label>\n                    <br />\n                        <input \n                        type=\"text\"\n                        required\n                        onChange={handleChange}\n                        value={formData.name}\n                        />\n                    <br />\n                    <label>Description</label>\n                    <br />\n                        <textarea\n                        required\n                        onChange={handleChange}\n                        value={formData.description}\n                        />\n                    <br />\n                    <button onClick={handleCancel}>Cancel</button>\n                    <button type=\"submit\">Submit</button>\n                </form>\n            </div>\n        )\n    }\n    return <p>Loading...</p>\n   \n}\nexport default DeckEdit;"]},"metadata":{},"sourceType":"module"}