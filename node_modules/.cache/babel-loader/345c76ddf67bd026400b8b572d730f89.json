{"ast":null,"code":"var _jsxFileName = \"/Users/kc/Thinkful/Project_Flashcards_Qualified_1/src/Layout/CardNew.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport { createCard, readDeck } from \"../utils/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CardNew() {\n  _s();\n\n  const params = useParams();\n  const history = useHistory();\n  const [front, setFront] = useState(\"Front side of card\");\n  const [back, setBack] = useState(\"Back side of card\");\n  const [currentDeck, setCurrentDeck] = useState(null);\n  useEffect(() => {\n    async function loadDeck() {\n      setCurrentDeck([]);\n\n      try {\n        const response = await readDeck(params.deckId);\n        setCurrentDeck(response);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    loadDeck();\n  }, [params]);\n\n  const handleDone = e => {\n    e.preventDefault();\n    history.push(`/decks/${params.deckId}`);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const card = {\n      front: front,\n      back: back,\n      deckId: params.deckId\n    };\n    createCard(params.deckId, card).then(response => {\n      console.log(response);\n      setFront(\"Front side of card\");\n      setBack(\"Back side of card\");\n    });\n  };\n\n  if (currentDeck) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), \" / \", /*#__PURE__*/_jsxDEV(Link, {\n          to: `/decks/${params.deckId}`,\n          children: currentDeck.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 48\n        }, this), \" / \", /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Add Card\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 113\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [currentDeck.name, \": Add Card\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Front\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          required: true,\n          value: front,\n          onChange: e => setFront(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          required: true,\n          value: back,\n          onChange: e => setBack(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDone,\n          children: \"Done\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 12\n  }, this);\n}\n\n_s(CardNew, \"BVU/uVsN7Pro74h3g1teEhIogoY=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = CardNew;\nexport default CardNew;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardNew\");","map":{"version":3,"sources":["/Users/kc/Thinkful/Project_Flashcards_Qualified_1/src/Layout/CardNew.js"],"names":["React","useEffect","useState","useHistory","useParams","Link","createCard","readDeck","CardNew","params","history","front","setFront","back","setBack","currentDeck","setCurrentDeck","loadDeck","response","deckId","error","console","log","handleDone","e","preventDefault","push","handleSubmit","card","then","name","target","value"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport { createCard, readDeck } from \"../utils/api\";\n\nfunction CardNew() {\n    const params = useParams();\n    const history = useHistory();\n\n    const [front, setFront] = useState(\"Front side of card\")\n    const [back, setBack] = useState(\"Back side of card\")\n    const [currentDeck, setCurrentDeck] = useState(null)\n    \n    useEffect(() => {\n        async function loadDeck() {\n            setCurrentDeck([])\n            try {\n                const response = await readDeck(params.deckId)\n                setCurrentDeck(response)\n            } catch (error) {console.log(error)}\n        }\n        loadDeck();\n    }, [params])\n\n    const handleDone = (e) => {\n        e.preventDefault();\n        history.push(`/decks/${params.deckId}`)\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const card = {\n            front: front,\n            back: back,\n            deckId: params.deckId\n        }\n        createCard(params.deckId, card)\n        .then(response => {\n            console.log(response)\n            setFront(\"Front side of card\")\n            setBack(\"Back side of card\")\n        })\n    }\n\n    if(currentDeck){\n        return (\n            <div>\n                <div>\n                    <Link to=\"/\">Home</Link> / <Link to={`/decks/${params.deckId}`}>{currentDeck.name}</Link> / <div>Add Card</div>\n                </div>\n                <div>\n                    <h2>{currentDeck.name}: Add Card</h2>\n                </div>\n                <form onSubmit={handleSubmit}>\n                    <label>Front</label>\n                    <br />\n                    <textarea\n                    required\n                    value={front}\n                    onChange={(e) => setFront(e.target.value)}\n                    />\n                    <br />\n                    <label>Back</label>\n                    <br />\n                    <textarea\n                    required\n                    value={back}\n                    onChange={(e) => setBack(e.target.value)}\n    \n                    />\n                    <br />\n                    <button onClick={handleDone}>Done</button>\n                    <button type=\"submit\">Save</button>\n                </form>\n            </div>\n        )\n    }\n    return <p>Loading...</p>\n}\nexport default CardNew;"]},"metadata":{},"sourceType":"module"}