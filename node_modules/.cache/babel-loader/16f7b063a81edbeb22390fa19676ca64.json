{"ast":null,"code":"var _jsxFileName = \"/Users/kc/Thinkful/Project_Flashcards_Qualified_1/src/Layout/DeckInfo.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { Link, useHistory, useParams } from \"react-router-dom\";\nimport { deleteCard, deleteDeck, readDeck } from \"../utils/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DeckInfo() {\n  _s();\n\n  const params = useParams();\n  const history = useHistory();\n  const [currentDeck, setCurrentDeck] = useState(null);\n  const [currentCards, setCurrentCards] = useState(null);\n  useEffect(() => {\n    async function loadDeck() {\n      setCurrentDeck([]);\n      setCurrentCards([]);\n\n      try {\n        const response = await readDeck(params.deckId);\n        setCurrentDeck(response);\n        const {\n          cards\n        } = response;\n        setCurrentCards(cards);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    loadDeck();\n  }, [params]);\n\n  if (currentDeck && currentCards) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), \" / \", currentDeck.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: currentDeck.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: currentDeck.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            history.push(`/decks/${currentDeck.id}/edit`);\n          },\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            history.push(`/decks/${currentDeck.id}/study`);\n          },\n          children: \"Study\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            history.push(`/decks/${currentDeck.id}/cards/new`);\n          },\n          children: \"Add Cards\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            if (window.confirm(\"Delete this deck?\")) {\n              deleteDeck(`${currentDeck.id}`);\n              history.push(\"/\");\n            }\n          },\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Cards\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: currentCards.map(card => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [card.front, /*#__PURE__*/_jsxDEV(\"div\", {\n              children: card.back\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                history.push(`/decks/${currentDeck.id}/cards/${card.id}/edit`);\n              },\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                if (window.confirm(\"Delete this card?\")) {\n                  deleteCard(`${card.id}`);\n                  history.push(`/decks/${params.deckId}`);\n                }\n              },\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 33\n            }, this)]\n          }, card.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this);\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DeckInfo, \"bHMxrxsPWCHOG9JOBnlSduDqGcI=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = DeckInfo;\n;\nexport default DeckInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeckInfo\");","map":{"version":3,"sources":["/Users/kc/Thinkful/Project_Flashcards_Qualified_1/src/Layout/DeckInfo.js"],"names":["React","useEffect","useState","Link","useHistory","useParams","deleteCard","deleteDeck","readDeck","DeckInfo","params","history","currentDeck","setCurrentDeck","currentCards","setCurrentCards","loadDeck","response","deckId","cards","error","console","log","name","description","push","id","window","confirm","map","card","front","back"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { Link, useHistory, useParams } from \"react-router-dom\";\nimport { deleteCard, deleteDeck, readDeck } from \"../utils/api\";\n\nfunction DeckInfo() {\n    const params = useParams();\n    const history = useHistory();\n\n    const [currentDeck, setCurrentDeck] = useState(null)\n    const [currentCards, setCurrentCards] = useState(null);\n\n    useEffect(() => {\n        async function loadDeck() {\n            setCurrentDeck([]);\n            setCurrentCards([]);\n            try {\n                const response = await readDeck(params.deckId);\n                setCurrentDeck(response);\n                const { cards } = response;\n                setCurrentCards(cards);\n            } catch (error) {console.log(error)}\n        }\n        loadDeck()\n    }, [params])\n    \n    if (currentDeck && currentCards) {\n        return (\n            <div>\n                <div>\n                    <Link to=\"/\">Home</Link> / {currentDeck.name}\n                </div>\n                <div>\n                    <h2>{currentDeck.name}</h2>\n                    <p>{currentDeck.description}</p>\n                    <button onClick={() => {history.push(`/decks/${currentDeck.id}/edit`)}}>Edit</button>\n                    <button onClick={() => {history.push(`/decks/${currentDeck.id}/study`)}}>Study</button>\n                    <button onClick={() => {history.push(`/decks/${currentDeck.id}/cards/new`)}}>Add Cards</button>\n                    <button onClick={() => {\n                        if(window.confirm(\"Delete this deck?\")){\n                            deleteDeck(`${currentDeck.id}`)\n                            history.push(\"/\")\n                        }}}>\n                    Delete\n                    </button>\n                </div>\n                <div>\n                    <h3>Cards</h3>\n                    <ul>\n                        {currentCards.map((card) => (\n                            <li key={card.id}>\n                                {card.front}\n                                <div>{card.back}</div>\n                                <button onClick={() => {history.push(`/decks/${currentDeck.id}/cards/${card.id}/edit`)}}>Edit</button>\n                                <button onClick={() => {\n                                    if(window.confirm(\"Delete this card?\")){\n                                        deleteCard(`${card.id}`);\n                                        history.push(`/decks/${params.deckId}`)\n                                    }}}>\n                                Delete\n                                </button>\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n            </div>\n        );\n    };\n    return (\n        <p>Loading...</p>\n    );\n};\n\nexport default DeckInfo;"]},"metadata":{},"sourceType":"module"}