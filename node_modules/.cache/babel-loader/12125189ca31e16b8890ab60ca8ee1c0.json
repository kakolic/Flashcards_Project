{"ast":null,"code":"var _jsxFileName = \"/Users/kc/Thinkful/Project_Flashcards_Qualified_1/src/Layout/DeckEdit.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { Link, useHistory, useParams } from \"react-router-dom\";\nimport { updateDeck, readDeck } from \"../utils/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DeckEdit() {\n  _s();\n\n  const {\n    deckId\n  } = useParams();\n  const history = useHistory();\n  const [currentDeck, setCurrentDeck] = useState(null);\n  const [name, setName] = useState(\"Loading...\");\n  const [description, setDescription] = useState(\"Loading...\");\n  useEffect(() => {\n    async function loadDeck() {\n      setCurrentDeck([]);\n\n      try {\n        const response = await readDeck(deckId);\n        setCurrentDeck(response);\n        setName(response.name);\n        setDescription(response.description);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    loadDeck();\n  }, [deckId]);\n\n  const handleEditSubmit = e => {\n    e.preventDefault();\n    const deck = { ...currentDeck,\n      name,\n      description\n    };\n    updateDeck(deck).then(response => {\n      console.log(response);\n      setCurrentDeck(response);\n      history.push(`/decks/${currentDeck.id}`);\n    });\n  };\n\n  const handleCancel = e => {\n    e.preventDefault();\n    history.push(`/decks/${currentDeck.id}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this), \" / \", /*#__PURE__*/_jsxDEV(Link, {\n        to: `/decks/${currentDeck.id}`,\n        children: currentDeck.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 48\n      }, this), \" / Edit Deck\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Edit Deck\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleEditSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        onChange: e => setName(e.target.value),\n        value: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        required: true,\n        onChange: e => setDescription(e.target.value),\n        value: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 13\n  }, this);\n}\n\n_s(DeckEdit, \"QargKU7aPMxeW0tSE7H3m/ZnHSs=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = DeckEdit;\nexport default DeckEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeckEdit\");","map":{"version":3,"sources":["/Users/kc/Thinkful/Project_Flashcards_Qualified_1/src/Layout/DeckEdit.js"],"names":["React","useState","useEffect","Link","useHistory","useParams","updateDeck","readDeck","DeckEdit","deckId","history","currentDeck","setCurrentDeck","name","setName","description","setDescription","loadDeck","response","error","console","log","handleEditSubmit","e","preventDefault","deck","then","push","id","handleCancel","target","value"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { Link, useHistory, useParams } from \"react-router-dom\";\nimport { updateDeck, readDeck } from \"../utils/api\";\n\nfunction DeckEdit() {    \n    const {deckId} = useParams();\n    const history = useHistory();\n\n\n    const [currentDeck, setCurrentDeck] = useState(null)\n    const [name, setName] = useState(\"Loading...\")\n    const [description, setDescription] = useState(\"Loading...\")\n\n    useEffect(() => {\n        async function loadDeck() {\n            setCurrentDeck([]);\n            try {\n                const response = await readDeck(deckId);\n                setCurrentDeck(response);\n                setName(response.name);\n                setDescription(response.description);\n            } catch (error) {console.log(error)}\n        }\n        loadDeck()\n    }, [deckId])\n\n    const handleEditSubmit = (e) => {\n        e.preventDefault();\n        const deck = {\n            ...currentDeck,\n            name, \n            description\n        }\n        updateDeck(deck)\n        .then(response => {\n            console.log(response)\n            setCurrentDeck(response)\n            history.push(`/decks/${currentDeck.id}`)\n        })\n    }\n\n    const handleCancel = (e) => {\n        e.preventDefault();\n        history.push(`/decks/${currentDeck.id}`)\n    }\n\n   \n        return (\n            <div>\n                <div>\n                    <Link to=\"/\">Home</Link> / <Link to={`/decks/${currentDeck.id}`}>{currentDeck.name}</Link> / Edit Deck\n                </div>\n                <h2>Edit Deck</h2>\n                <form onSubmit={handleEditSubmit}>\n                    <label>Name</label>\n                    <br />\n                        <input \n                        type=\"text\"\n                        required\n                        onChange={(e) => setName(e.target.value)}\n                        value={name}\n                        />\n                    <br />\n                    <label>Description</label>\n                    <br />\n                        <textarea\n                        required\n                        onChange={(e) => setDescription(e.target.value)}\n                        value={description}\n                        />\n                    <br />\n                    <button onClick={handleCancel}>Cancel</button>\n                    <button type=\"submit\">Submit</button>\n                </form>\n            </div>\n        )\n    \n  \n   \n}\nexport default DeckEdit;"]},"metadata":{},"sourceType":"module"}