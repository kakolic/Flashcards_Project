{"ast":null,"code":"var _jsxFileName = \"/Users/kc/Thinkful/Project_Flashcards_Qualified_1/src/Layout/DeckEdit.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { Link, useHistory, useParams } from \"react-router-dom\";\nimport { updateDeck, readDeck } from \"../utils/api\";\nimport DeckInfo from \"./DeckInfo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DeckEdit({\n  deckInfo\n}) {\n  _s();\n\n  const {\n    deckId\n  } = useParams();\n  const history = useHistory();\n  const state = {\n    name: \"\",\n    description: \"\"\n  };\n  const [formData, setFormData] = useState(state);\n  const [deck, setDeck] = useState({});\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    const loadDeck = async () => {\n      const newDeck = await readDeck(deckId, abortController.signal);\n      setDeck(() => newDeck);\n      setFormData({\n        id: deckId,\n        name: newDeck.name,\n        description: newDeck.description\n      });\n    };\n\n    loadDeck();\n    return () => abortController.abort();\n  }, [deckId]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const deck = await updateDeck(formData);\n    history.push(`/decks/${deck.id}`);\n  };\n\n  const handleChange = event => {\n    setFormData({ ...formData,\n      [event.target.Name]: event.target.value\n    });\n  };\n\n  const handleCancel = e => {\n    e.preventDefault();\n    history.push(`/decks/${deckId}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this), \" / \", /*#__PURE__*/_jsxDEV(Link, {\n        to: handleCancel,\n        children: deck.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 48\n      }, this), \" / Edit Deck\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Edit Deck\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        onChange: handleChange,\n        value: formData.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        required: true,\n        onChange: handleChange,\n        value: formData.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 13\n  }, this);\n}\n\n_s(DeckEdit, \"zG4bGKhdbVufZ8GDJXJ2Rzn2GWY=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = DeckEdit;\nexport default DeckEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeckEdit\");","map":{"version":3,"sources":["/Users/kc/Thinkful/Project_Flashcards_Qualified_1/src/Layout/DeckEdit.js"],"names":["React","useState","useEffect","Link","useHistory","useParams","updateDeck","readDeck","DeckInfo","DeckEdit","deckInfo","deckId","history","state","name","description","formData","setFormData","deck","setDeck","abortController","AbortController","loadDeck","newDeck","signal","id","abort","handleSubmit","e","preventDefault","push","handleChange","event","target","Name","value","handleCancel"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { Link, useHistory, useParams } from \"react-router-dom\";\nimport { updateDeck, readDeck } from \"../utils/api\";\nimport DeckInfo from \"./DeckInfo\";\n\nfunction DeckEdit({deckInfo}) {    \n    const {deckId} = useParams();\n    const history = useHistory();\n    const state = {name: \"\", description: \"\"};\n    const [formData, setFormData]= useState(state);\n\n \n    const [deck, setDeck]= useState({});\n    \n\n    useEffect(() => {\n        const abortController = new AbortController();\n       const loadDeck= async ()=> {\n                const newDeck = await readDeck(deckId, abortController.signal);\n                setDeck(()=> newDeck);\n                setFormData({\n                    id:deckId,\n                    name: newDeck.name,\n                    description:newDeck.description,\n                })\n        }\n        loadDeck()\n        return () => abortController.abort();\n    }, [deckId]);\n\n    const handleSubmit = async(e) => {\n        e.preventDefault();\n        const deck = await updateDeck(formData);\n            history.push(`/decks/${deck.id}`)\n        }\n    \n    const handleChange = (event) => {\n        setFormData({ ...formData, [event.target.Name]: event.target.value });\n      };\n\n    const handleCancel = (e) => {\n        e.preventDefault();\n        history.push(`/decks/${deckId}`)\n    }\n\n  \n        return (\n            <div>\n                <div>\n                    <Link to=\"/\">Home</Link> / <Link to={handleCancel}>{deck.name}</Link> / Edit Deck\n                </div>\n                <h2>Edit Deck</h2>\n                <form onSubmit={handleSubmit}>\n                    \n                    <label>Name</label>\n                    <br />\n                        <input \n                        type=\"text\"\n                        required\n                        onChange={handleChange}\n                        value={formData.name}\n                        />\n                    <br />\n                    <label>Description</label>\n                    <br />\n                        <textarea\n                        required\n                        onChange={handleChange}\n                        value={formData.description}\n                        />\n                    <br />\n                    <button onClick={handleCancel}>Cancel</button>\n                    <button type=\"submit\">Submit</button>\n                </form>\n            </div>\n        )\n    }\n\n   \nexport default DeckEdit;"]},"metadata":{},"sourceType":"module"}