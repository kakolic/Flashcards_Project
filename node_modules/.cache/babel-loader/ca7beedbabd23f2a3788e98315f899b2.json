{"ast":null,"code":"var _jsxFileName = \"/Users/kc/Thinkful/Project_Flashcards_Qualified_1/src/Layout/DeckInfo.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { Link, useHistory, useParams } from \"react-router-dom\";\nimport { readDeck, deleteDeck } from \"../utils/api\";\nimport EditCard from \"./EditCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DeckInfo({\n  deck,\n  card,\n  updateDecks\n}) {\n  _s();\n\n  const {\n    deckId\n  } = useParams();\n  const history = useHistory();\n  const [currentDeck, setCurrentDeck] = useState(null);\n  const [currentCards, setCurrentCards] = useState(null);\n  useEffect(() => {\n    async function loadDeck() {\n      setCurrentDeck([]);\n      setCurrentCards([]);\n\n      try {\n        const response = await readDeck(deckId);\n        setCurrentDeck(response);\n        const {\n          cards\n        } = response;\n        setCurrentCards(cards);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    loadDeck();\n  }, [deckId]);\n\n  const handleDeckDelete = deck => {\n    if (window.confirm(\" Would you like to delete this deck?\")) {\n      deleteDeck(`${deck.id}`);\n      history.go(\"/\");\n    }\n  };\n\n  const handleCardDelete = card => {\n    if (window.confirm(\" Would you like to delete this deck?\")) {\n      deleteDeck(`${card.id}`);\n      history.go(\"/\");\n    }\n  };\n\n  const handleCard = async () => {\n    if (EditCard(currentDeck.id)) history.push(`/decks/${currentDeck.id}/cards/${card.id}/edit`);\n  };\n\n  const handleStudyCard = e => {\n    e.preventDefault();\n    history.push(`/decks/${currentDeck.id}/study`);\n  };\n\n  const handleAddCard = e => {\n    e.preventDefault();\n    history.push(`/decks/${currentDeck.id}/cards/new`);\n  };\n\n  if (currentDeck && currentCards) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), \" / \", currentDeck.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: currentDeck.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: currentDeck.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCard,\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleStudyCard,\n          children: \"Study\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddCard,\n          children: \"Add Cards\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: deleteDeck,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Cards\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: currentCards.map(card => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [card.front, /*#__PURE__*/_jsxDEV(\"div\", {\n              children: card.back\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleCard,\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleCardDelete,\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 33\n            }, this)]\n          }, card.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this);\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DeckInfo, \"nJfHx3iCju6Dw6lIuYzY5ypklpY=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = DeckInfo;\n;\nexport default DeckInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeckInfo\");","map":{"version":3,"sources":["/Users/kc/Thinkful/Project_Flashcards_Qualified_1/src/Layout/DeckInfo.js"],"names":["React","useEffect","useState","Link","useHistory","useParams","readDeck","deleteDeck","EditCard","DeckInfo","deck","card","updateDecks","deckId","history","currentDeck","setCurrentDeck","currentCards","setCurrentCards","loadDeck","response","cards","error","console","log","handleDeckDelete","window","confirm","id","go","handleCardDelete","handleCard","push","handleStudyCard","e","preventDefault","handleAddCard","name","description","map","front","back"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { Link, useHistory, useParams } from \"react-router-dom\";\nimport { readDeck, deleteDeck } from \"../utils/api\";\nimport EditCard from \"./EditCard\";\n\n\nfunction DeckInfo({deck,card, updateDecks} ) {\n    const {deckId} = useParams();\n    const history = useHistory();\n\n    const [currentDeck, setCurrentDeck] = useState(null)\n    const [currentCards, setCurrentCards] = useState(null);\n\n    \n    useEffect(() => {\n        async function loadDeck() {\n            setCurrentDeck([]);\n            setCurrentCards([]);\n            try {\n                const response = await readDeck(deckId);\n                setCurrentDeck(response);\n                const { cards } = response;\n                setCurrentCards(cards);\n            } catch (error) {console.log(error)}\n        }\n        loadDeck()\n    }, [deckId])\n    \n    const handleDeckDelete = (deck) => {\n        if(window.confirm(\" Would you like to delete this deck?\")){\n            deleteDeck(`${deck.id}`);\n            history.go(\"/\")}\n    }\n    const handleCardDelete = (card) => {\n        if(window.confirm(\" Would you like to delete this deck?\")){\n            deleteDeck(`${card.id}`);\n            history.go(\"/\")}\n    }\n\n    const handleCard = async()=> {\n        if(EditCard(currentDeck.id))\n            history.push(`/decks/${currentDeck.id}/cards/${card.id}/edit`);\n        }\n    const handleStudyCard = (e) => {\n        e.preventDefault();\n            history.push(`/decks/${currentDeck.id}/study`);\n            }\n    const handleAddCard = (e) => {\n        e.preventDefault();\n              history.push(`/decks/${currentDeck.id}/cards/new`);\n                }\n\n    \n    if (currentDeck && currentCards) {\n        return (\n            <div>\n                <div>\n                    <Link to=\"/\">Home</Link> / {currentDeck.name}\n                </div>\n                <div>\n                    <h2>{currentDeck.name}</h2>\n                    <p>{currentDeck.description}</p>\n                    <button onClick={handleCard}>Edit</button>\n                    <button onClick={handleStudyCard}>Study</button>\n                    <button onClick={handleAddCard}>Add Cards</button>\n                    <button onClick={deleteDeck}>\n                    Delete\n                    </button>\n                </div>\n                <div>\n                    <h3>Cards</h3>\n                    <ul>\n                        {currentCards.map((card) => (\n                            <li key={card.id}>\n                                {card.front}\n                                <div>{card.back}</div>\n                                <button onClick={handleCard}>Edit</button>\n                                <button onClick={handleCardDelete}>Delete</button>\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n            </div>\n        );\n    };\n    return (\n        <p>Loading...</p>\n    );\n};\n\nexport default DeckInfo;"]},"metadata":{},"sourceType":"module"}