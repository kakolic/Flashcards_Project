{"ast":null,"code":"var _jsxFileName = \"/Users/kc/Thinkful/Project_Flashcards_Qualified_1/src/Layout/StudyCardFlip.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction StudyCardFlip({\n  cards\n}) {\n  _s();\n\n  const history = useHistory();\n  const {\n    deckId\n  } = useParams();\n  const state = {\n    flipped: false,\n    currentCard: 0\n  }; // const [cardCount, setCardCount] = useState(1);\n  // const [sideOfCard, setSideOfCard] = useState(null);\n  // const [studyCardCount, setStudyCardCount] = useState(0);\n\n  const [session, setSession] = useState(state); // const orderedCards = currentCards.sort((a, b) => a.id - b.id);\n  // useEffect(() => {\n  //     if(cards.length > 2){\n  //         setStudyCard(true);\n  //     }\n  //     setStudyCard(orderedCards[studyCardCount])\n  // }, [currentCards])\n  // const handleFlip = (e) => {\n  //     e.preventDefault()\n  //     setSideOfCard(!sideOfCard)\n  // }\n\n  const handleNext = () => {\n    if (session.currentCard < cards.length - 1) {\n      setSession({ ...session,\n        currentCard: session.currentCard + 1,\n        flipped: false\n      });\n    } else {\n      window.confirm('Restart cards? Click \"cancel\" to return to the home page.') ? setSession(state) : history.push(\"/\");\n    }\n  };\n\n  const handleAddCards = e => {\n    e.preventDefault();\n    history.push(`/decks/${deckId}/cards/new`);\n  };\n\n  if (cards.length > 2) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [\"Card \", session.currentCard + 1, \" of \", cards.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSession({ ...session,\n          flipped: true\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this);\n  }\n\n  if (session.flipped) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNext,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Not enough cards.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"You need at least 3 cards to study. There are \", cards.length, \" in this deck.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddCards,\n        children: \" Add Cards\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }, this);\n  } // return (\n  //     <p>Loading...</p>\n  // )\n\n}\n\n_s(StudyCardFlip, \"tEcds3n8d7lWBuTCICAtnKGI6mQ=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = StudyCardFlip;\nexport default StudyCardFlip;\n\nvar _c;\n\n$RefreshReg$(_c, \"StudyCardFlip\");","map":{"version":3,"sources":["/Users/kc/Thinkful/Project_Flashcards_Qualified_1/src/Layout/StudyCardFlip.js"],"names":["React","useEffect","useState","useHistory","useParams","StudyCardFlip","cards","history","deckId","state","flipped","currentCard","session","setSession","handleNext","length","window","confirm","push","handleAddCards","e","preventDefault"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,kBAAtC;;;AAEA,SAASC,aAAT,CAAuB;AAAEC,EAAAA;AAAF,CAAvB,EAAkC;AAAA;;AAC9B,QAAMC,OAAO,GAAGJ,UAAU,EAA1B;AACA,QAAM;AAACK,IAAAA;AAAD,MAAWJ,SAAS,EAA1B;AACA,QAAMK,KAAK,GAAG;AAACC,IAAAA,OAAO,EAAE,KAAV;AAAiBC,IAAAA,WAAW,EAAE;AAA9B,GAAd,CAH8B,CAK9B;AACA;AACA;;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAACO,KAAD,CAAtC,CAR8B,CAS9B;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAGA,QAAMK,UAAU,GAAG,MAAM;AACrB,QAAIF,OAAO,CAACD,WAAR,GAAsBL,KAAK,CAACS,MAAN,GAAe,CAAzC,EAA4C;AACxCF,MAAAA,UAAU,CAAC,EACP,GAAGD,OADI;AAEPD,QAAAA,WAAW,EAAEC,OAAO,CAACD,WAAR,GAAsB,CAF5B;AAGPD,QAAAA,OAAO,EAAE;AAHF,OAAD,CAAV;AAKC,KANL,MAMW;AACLM,MAAAA,MAAM,CAACC,OAAP,CACE,2DADF,IAGIJ,UAAU,CAACJ,KAAD,CAHd,GAIIF,OAAO,CAACW,IAAR,CAAa,GAAb,CAJJ;AAKD;AACF,GAdP;;AAgBA,QAAMC,cAAc,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;AACAd,IAAAA,OAAO,CAACW,IAAR,CAAc,UAASV,MAAO,YAA9B;AACH,GAHD;;AAKA,MAAIF,KAAK,CAACS,MAAN,GAAe,CAAnB,EAAsB;AACd,wBACI;AAAA,8BACI;AAAA,4BAAUH,OAAO,CAACD,WAAR,GAAsB,CAAhC,UAAuCL,KAAK,CAACS,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAGI;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAQ,QAAA,OAAO,EAAE,MAAMF,UAAU,CAAC,EAAE,GAAGD,OAAL;AAAcF,UAAAA,OAAO,EAAE;AAAvB,SAAD;AAAjC;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAUH;;AACD,MAAIE,OAAO,CAACF,OAAZ,EAAoB;AAChB,wBACI;AAAA,8BAGI;AAAA;AAAA;AAAA;AAAA,cAHJ,eAKI;AAAQ,QAAA,OAAO,EAAEI,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AASH,GAVD,MAWK;AACD,wBACI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,qEAAkDR,KAAK,CAACS,MAAxD;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAQ,QAAA,OAAO,EAAEI,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH,GA5EyB,CA6E1B;AACA;AACA;;AACH;;GAhFId,a;UACWF,U,EACCC,S;;;KAFZC,a;AAoFT,eAAeA,aAAf","sourcesContent":["import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\n\nfunction StudyCardFlip({ cards }) {\n    const history = useHistory();\n    const {deckId} = useParams();\n    const state = {flipped: false, currentCard: 0}\n\n    // const [cardCount, setCardCount] = useState(1);\n    // const [sideOfCard, setSideOfCard] = useState(null);\n    // const [studyCardCount, setStudyCardCount] = useState(0);\n    const [session, setSession] = useState(state);\n    // const orderedCards = currentCards.sort((a, b) => a.id - b.id);\n\n    // useEffect(() => {\n    //     if(cards.length > 2){\n    //         setStudyCard(true);\n    //     }\n    //     setStudyCard(orderedCards[studyCardCount])\n    // }, [currentCards])\n    \n    // const handleFlip = (e) => {\n    //     e.preventDefault()\n    //     setSideOfCard(!sideOfCard)\n    // }\n\n\n    const handleNext = () => {\n        if (session.currentCard < cards.length - 1) {\n            setSession({\n                ...session,\n                currentCard: session.currentCard + 1,\n                flipped: false,\n              });\n            } else {\n              window.confirm(\n                'Restart cards? Click \"cancel\" to return to the home page.'\n              )\n                ? setSession(state)\n                : history.push(\"/\");\n            }\n          };\n\n    const handleAddCards = (e) => {\n        e.preventDefault()\n        history.push(`/decks/${deckId}/cards/new`)\n    }\n\n    if (cards.length > 2) {\n            return (\n                <div>\n                    <h5>Card {session.currentCard + 1} of {cards.length}</h5>\n                   \n                    <br />\n                    <button onClick={() => setSession({ ...session, flipped: true })}>\n\n                    </button>\n                </div>\n            )\n        }\n        if (session.flipped){\n            return (\n                <div>\n                    {/* <h5>Card {cardCount} of {currentCards.length}</h5>\n                    {studyCard.back} */}\n                    <br />\n                    {/* <button onClick={handleFlip}>Flip</button> */}\n                    <button onClick={handleNext}>Next</button> \n                </div>\n            )\n        }\n        else {\n            return (\n                <div>\n                    <h5>Not enough cards.</h5>\n                    <p>You need at least 3 cards to study. There are {cards.length} in this deck.</p>\n                    <button onClick={handleAddCards}> Add Cards</button>\n                </div>\n            )\n        }\n        // return (\n        //     <p>Loading...</p>\n        // )\n    }\n    \n    \n\nexport default StudyCardFlip;"]},"metadata":{},"sourceType":"module"}