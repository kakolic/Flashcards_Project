{"ast":null,"code":"var _jsxFileName = \"/Users/kc/Thinkful/Project_Flashcards_Qualified_1/src/Layout/Home.js\",\n    _s = $RefreshSig$();\n\nimport React from \" react\";\nimport { useEffect, useState } from \"react\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { deleteDeck, listDecks } from \"../utils/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Home() {\n  _s();\n\n  const history = useHistory();\n  const [decks, setDecks] = useState(0);\n  useEffect(() => {\n    async function newDecks() {\n      setDecks([]);\n\n      try {\n        const response = await listDecks();\n        setDecks(response);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    newDecks();\n  }, []);\n\n  const handleCreateDeck = () => {\n    history.push(\"/decks/new\");\n  };\n\n  if (decks) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCreateDeck,\n        children: \"+ Create Deck\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: decks.map(deck => {\n          /*#__PURE__*/\n          _jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \" \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 28\n            }, this)\n          }, deck.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 24\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(Home, \"7hmtNljsBjtlmDS4GgT2KW/pCHw=\", false, function () {\n  return [useHistory];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/kc/Thinkful/Project_Flashcards_Qualified_1/src/Layout/Home.js"],"names":["React","useEffect","useState","useHistory","Link","deleteDeck","listDecks","Home","history","decks","setDecks","newDecks","response","error","console","log","handleCreateDeck","push","map","deck","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,QAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,UAAT,EAAqBC,IAArB,QAAiC,kBAAjC;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,cAAtC;;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AACZ,QAAMC,OAAO,GAAGL,UAAU,EAA1B;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAmBR,QAAQ,CAAC,CAAD,CAAjC;AAGAD,EAAAA,SAAS,CAAE,MAAI;AACX,mBAAeU,QAAf,GAAyB;AACrBD,MAAAA,QAAQ,CAAC,EAAD,CAAR;;AACA,UAAI;AACA,cAAME,QAAQ,GAAG,MAAMN,SAAS,EAAhC;AACAI,QAAAA,QAAQ,CAACE,QAAD,CAAR;AACH,OAHD,CAGE,OAAOC,KAAP,EAAc;AAACC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAAmB;AACvC;;AACDF,IAAAA,QAAQ;AACX,GATQ,EASN,EATM,CAAT;;AAYA,QAAMK,gBAAgB,GAAG,MAAK;AAC1BR,IAAAA,OAAO,CAACS,IAAR,CAAa,YAAb;AACH,GAFD;;AAGA,MAAIR,KAAJ,EAAW;AACP,wBACI;AAAA,8BACI;AAAQ,QAAA,OAAO,EAAIO,gBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBACKP,KAAK,CAACS,GAAN,CAAYC,IAAD,IAAS;AAClB;AAAA;AAAA,mCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,aAAWA,IAAI,CAACC,EAAhB;AAAA;AAAA;AAAA;AAAA;AAIF,SALA;AADL;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAaH;AAEJ;;GApCQb,I;UACWJ,U;;;KADXI,I;AAsCT,eAAeA,IAAf","sourcesContent":["import React from \" react\";\nimport { useEffect, useState } from \"react\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { deleteDeck, listDecks } from \"../utils/api\";\n\nfunction Home (){\n    const history = useHistory();\n    const [decks, setDecks]= useState(0);\n\n\n    useEffect (()=>{\n        async function newDecks(){\n            setDecks([]);\n            try {\n                const response = await listDecks()\n                setDecks(response);\n            } catch (error) {console.log(error)}\n        }\n        newDecks();\n    }, [])\n\n\n    const handleCreateDeck = ()=> {\n        history.push(\"/decks/new\")\n    }\n    if (decks) {\n        return (\n            <div>\n                <button onClick = {handleCreateDeck}>+ Create Deck</button>\n                <ul> \n                    {decks.map ((deck)=> {\n                       <li key = {deck.id}>\n                           <h2> </h2>\n\n                       </li>\n                    })}\n                </ul>\n            </div>\n        )\n    }\n\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}