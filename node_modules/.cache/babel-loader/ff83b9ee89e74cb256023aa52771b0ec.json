{"ast":null,"code":"var _jsxFileName = \"/Users/kc/Thinkful/Project_Flashcards_Qualified_1/src/Layout/DeckInfo.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { Link, useHistory, useParams } from \"react-router-dom\";\nimport { deleteCard, readDeck, updateDecks } from \"../utils/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DeckInfo({\n  deck\n}) {\n  _s();\n\n  const {\n    deckId\n  } = useParams();\n  const history = useHistory();\n  const [decks, setdecks] = useState({});\n  const [currentDeck, setCurrentDeck] = useState(null);\n  const [currentCards, setCurrentCards] = useState(null);\n\n  const handleDelete = async () => {\n    const deleteDeck = window.confirm(\"would you like to Delete this deck?\");\n\n    if (deleteDeck) {\n      await deleteDeck(deck.id);\n      updateDecks(-1);\n      history.push(\"/\");\n    }\n  };\n\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    const loadDeck = async () => {\n      const loadedDeck = await readDeck(deckId, abortController.signal);\n      setdecks(() => loadedDeck);\n    };\n\n    loadDeck();\n    return () => abortController.abort();\n  }, [deckId]);\n\n  if (currentDeck && currentCards) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), \" / \", currentDeck.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: currentDeck.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: currentDeck.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            history.push(`/decks/${currentDeck.id}/edit`);\n          },\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            history.push(`/decks/${currentDeck.id}/study`);\n          },\n          children: \"Study\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            history.push(`/decks/${currentDeck.id}/cards/new`);\n          },\n          children: \"Add Cards\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDelete,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Cards\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: currentCards.map(card => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [card.front, /*#__PURE__*/_jsxDEV(\"div\", {\n              children: card.back\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                history.push(`/decks/${currentDeck.id}/cards/${card.id}/edit`);\n              },\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                if (window.confirm(\"Delete this card?\")) {\n                  deleteCard(`${card.id}`);\n                  history.push(`/decks/${deckId}`);\n                }\n              },\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 33\n            }, this)]\n          }, card.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this);\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DeckInfo, \"ZtR3XQRO9uJ/hbqExExbzW9lX9w=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = DeckInfo;\n;\nexport default DeckInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeckInfo\");","map":{"version":3,"sources":["/Users/kc/Thinkful/Project_Flashcards_Qualified_1/src/Layout/DeckInfo.js"],"names":["React","useEffect","useState","Link","useHistory","useParams","deleteCard","readDeck","updateDecks","DeckInfo","deck","deckId","history","decks","setdecks","currentDeck","setCurrentDeck","currentCards","setCurrentCards","handleDelete","deleteDeck","window","confirm","id","push","abortController","AbortController","loadDeck","loadedDeck","signal","abort","name","description","map","card","front","back"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { Link, useHistory, useParams } from \"react-router-dom\";\nimport { deleteCard, readDeck, updateDecks } from \"../utils/api\";\n\nfunction DeckInfo({deck}) {\n    const {deckId} = useParams();\n    const history = useHistory();\n    const [decks, setdecks]= useState({});\n    const [currentDeck, setCurrentDeck] = useState(null)\n    const [currentCards, setCurrentCards] = useState(null);\n\n    \n    \n    const handleDelete = async ()=> {\n        const deleteDeck = window.confirm(\"would you like to Delete this deck?\");\n        if (deleteDeck){\n            await deleteDeck(deck.id);\n            updateDecks(-1);\n            history.push(\"/\");\n        }\n    }\n    useEffect(() => {\n        const abortController = new AbortController();\n        const loadDeck = async () => {\n          const loadedDeck = await readDeck(deckId, abortController.signal);\n          setdecks(()=> loadedDeck);\n               \n            };\n            loadDeck();\n            return () => abortController.abort();\n          }, [deckId]);\n    \n    if (currentDeck && currentCards) {\n        return (\n            <div>\n                <div>\n                    <Link to=\"/\">Home</Link> / {currentDeck.name}\n                </div>\n                <div>\n                    <h2>{currentDeck.name}</h2>\n                    <p>{currentDeck.description}</p>\n                    <button onClick={() => {history.push(`/decks/${currentDeck.id}/edit`)}}>Edit</button>\n                    <button onClick={() => {history.push(`/decks/${currentDeck.id}/study`)}}>Study</button>\n                    <button onClick={() => {history.push(`/decks/${currentDeck.id}/cards/new`)}}>Add Cards</button>\n                    <button onClick={handleDelete}>\n                    Delete\n                    </button>\n                </div>\n                <div>\n                    <h3>Cards</h3>\n                    <ul>\n                        {currentCards.map((card) => (\n                            <li key={card.id}>\n                                {card.front}\n                                <div>{card.back}</div>\n                                <button onClick={() => {history.push(`/decks/${currentDeck.id}/cards/${card.id}/edit`)}}>Edit</button>\n                                <button onClick={() => {\n                                    if(window.confirm(\"Delete this card?\")){\n                                        deleteCard(`${card.id}`);\n                                        history.push(`/decks/${deckId}`)\n                                    }}}>\n                                Delete\n                                </button>\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n            </div>\n        );\n    };\n    return (\n        <p>Loading...</p>\n    );\n};\n\nexport default DeckInfo;"]},"metadata":{},"sourceType":"module"}