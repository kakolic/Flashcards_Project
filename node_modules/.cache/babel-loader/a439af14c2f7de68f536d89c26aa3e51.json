{"ast":null,"code":"var _jsxFileName = \"/Users/kc/Thinkful/Project_Flashcards_Qualified_1/src/Layout/Study.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { readDeck } from \"../utils/api\";\nimport StudyCardFlip from \"./StudyCardFlip\"; // function Study() {\n//     const params = useParams();\n//     const [currentDeck, setCurrentDeck] = useState(null)\n//     const [currentCards, setCurrentCards] = useState(null);\n//     useEffect(() => {\n//         async function loadDeck() {\n//             setCurrentDeck([]);\n//             setCurrentCards([]);\n//             try {\n//                 const response = await readDeck(params.deckId);\n//                 setCurrentDeck(response);\n//                 const { cards } = response;\n//                 setCurrentCards(cards);\n//             } catch (error) {console.log(error)}\n//         }\n//         loadDeck()\n//     }, [params])\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Study() {\n  _s();\n\n  const [currentDeck, setCurrentDeck] = useState([]);\n  const {\n    deckId\n  } = useParams();\n  useEffect(() => {\n    const loadDeck = async () => {\n      const newDeck = await readDeck(deckId);\n      setCurrentDeck(() => newDeck);\n    };\n\n    loadDeck();\n  }, [deckId]);\n\n  if (currentDeck) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), \" / \", /*#__PURE__*/_jsxDEV(Link, {\n          to: `/decks/${currentDeck.id}`,\n          children: currentDeck.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 48\n        }, this), \" / Study\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [currentDeck.name, \": Study\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Study, \"B6NhYWVp4cbn/uCOXyPP051FUC0=\", false, function () {\n  return [useParams];\n});\n\n_c = Study;\nexport default Study;\n\nvar _c;\n\n$RefreshReg$(_c, \"Study\");","map":{"version":3,"sources":["/Users/kc/Thinkful/Project_Flashcards_Qualified_1/src/Layout/Study.js"],"names":["React","useState","useEffect","useParams","Link","readDeck","StudyCardFlip","Study","currentDeck","setCurrentDeck","deckId","loadDeck","newDeck","id","name"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,SAAT,EAAoBC,IAApB,QAA+B,kBAA/B;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,OAAOC,aAAP,MAA0B,iBAA1B,C,CAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEC,SAASC,KAAT,GAAgB;AAAA;;AACT,QAAM,CAACC,WAAD,EAAaC,cAAb,IAA+BR,QAAQ,CAAC,EAAD,CAA7C;AACA,QAAM;AAACS,IAAAA;AAAD,MAAWP,SAAS,EAA1B;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,QAAQ,GAAG,YAAY;AAC3B,YAAMC,OAAO,GAAG,MAAMP,QAAQ,CAACK,MAAD,CAA9B;AACAD,MAAAA,cAAc,CAAC,MAAMG,OAAP,CAAd;AACD,KAHD;;AAIAD,IAAAA,QAAQ;AACT,GANQ,EAMN,CAACD,MAAD,CANM,CAAT;;AAUJ,MAAGF,WAAH,EAAe;AACX,wBACI;AAAA,8BACI;AAAA,gCACI,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,sBAC+B,QAAC,IAAD;AAAM,UAAA,EAAE,EAAG,UAASA,WAAW,CAACK,EAAG,EAAnC;AAAA,oBAAuCL,WAAW,CAACM;AAAnD;AAAA;AAAA;AAAA;AAAA,gBAD/B;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAA,+BACI;AAAA,qBAAKN,WAAW,CAACM,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAYH;;AACD,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH;;GA9BSP,K;UAEeJ,S;;;KAFfI,K;AA+BV,eAAeA,KAAf","sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { useParams, Link} from \"react-router-dom\";\nimport { readDeck } from \"../utils/api\";\nimport StudyCardFlip from \"./StudyCardFlip\";\n\n// function Study() {\n//     const params = useParams();\n//     const [currentDeck, setCurrentDeck] = useState(null)\n//     const [currentCards, setCurrentCards] = useState(null);\n\n//     useEffect(() => {\n//         async function loadDeck() {\n//             setCurrentDeck([]);\n//             setCurrentCards([]);\n//             try {\n//                 const response = await readDeck(params.deckId);\n//                 setCurrentDeck(response);\n//                 const { cards } = response;\n//                 setCurrentCards(cards);\n//             } catch (error) {console.log(error)}\n//         }\n//         loadDeck()\n//     }, [params])\n\n function Study(){\n        const [currentDeck,setCurrentDeck] = useState([]);\n        const {deckId} = useParams();\n        useEffect(() => {\n          const loadDeck = async () => {\n            const newDeck = await readDeck(deckId);\n            setCurrentDeck(() => newDeck);\n          };\n          loadDeck();\n        }, [deckId]);\n\n\n    \n    if(currentDeck){\n        return (\n            <div>\n                <div>\n                    <Link to=\"/\">Home</Link> / <Link to={`/decks/${currentDeck.id}`}>{currentDeck.name}</Link> / Study\n                </div>\n                <div>\n                    <h1>{currentDeck.name}: Study</h1>\n                </div>\n                    {/* <StudyCardFlip currentCards={currentCards} /> */}\n            </div>\n        )\n    \n    }\n    return (\n        <p>Loading...</p>\n    );\n}\nexport default Study;\n"]},"metadata":{},"sourceType":"module"}