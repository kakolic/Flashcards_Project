{"ast":null,"code":"var _jsxFileName = \"/Users/kc/Thinkful/Project_Flashcards_Qualified_1/src/Layout/EditCard.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { Link, useHistory, useParams } from \"react-router-dom\";\nimport { readDeck, updateCard, readCard } from \"../utils/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditCard() {\n  _s();\n\n  const history = useHistory();\n  const {\n    deckId,\n    cardId\n  } = useParams();\n  const state = {\n    front: \"\",\n    back: \"\"\n  };\n  const [updatedCard, setUpdatedCard] = useState(state);\n  const [deck, setDeck] = useState({});\n  const [card, setCard] = useState({});\n\n  const handleChange = event => {\n    setUpdatedCard({ ...updatedCard,\n      [event.target.name]: event.target.value\n    });\n  }; //const [updatedDeck, setUpdatedDeck]= useState({});\n  // const [front, setFront] = useState(\"\")\n  // const [back, setBack] = useState(\"\")\n  // const [currentDeck, setCurrentDeck] = useState(null)\n  // const [currentCard, setCurrentCard] = useState(null)\n\n\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    const loadInfo = async () => {\n      const newDeck = await readDeck(deckId, abortController.signal);\n      const newCard = await readCard(cardId);\n      setDeck(() => newDeck);\n      setCard(() => newCard);\n      setUpdatedCard({\n        id: cardId,\n        front: newCard.front,\n        back: newCard.back,\n        deckId: Number(deckId)\n      });\n    };\n\n    loadInfo();\n    return () => abortController.abort();\n  }, [deckId, cardId]); // useEffect(() => {\n  //     async function loadInfo(){\n  //         try {\n  //             const response = await readDeck(params.deckId);\n  //             setUpdatedDeck(response)\n  //             setUpdatedCard(response.cards.find((card) => (card.id + \"\") === params.cardId))\n  //             updatedCard((response.cards.find((card) => (card.id + \"\") === params.cardId)).front)\n  //             //setBack((response.cards.find((card) => (card.id + \"\") === params.cardId)).back)\n  //         } catch (error) {console.log(error)}\n  //     }\n  //     loadInfo()\n  // }, [params])\n\n  const handleCancel = e => {\n    e.preventDefault();\n    history.push(\"/\");\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    await updateCard(updatedCard);\n    history.push(`/decks/${deckId}`);\n  }; // const handleSubmit = async(e) => {\n  //     e.preventDefault();\n  //     const deck = await updateCard(updatedCard);\n  //         history.push(`/decks/${params.deck}`)\n  //     }\n\n\n  if (updatedCard) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), \" / \", /*#__PURE__*/_jsxDEV(Link, {\n          to: `/decks/${deckId}`,\n          children: updatedCard.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 48\n        }, this), \"  / Edit Card \", updatedCard.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Edit Card\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Front\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          required: true,\n          value: updatedCard.front,\n          onChange: e => setUpdatedCard(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          required: true,\n          value: updatedCard.back,\n          onChange: e => setUpdatedCard(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCancel,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 12\n  }, this);\n}\n\n_s(EditCard, \"hY+0g8JvGjPWGYjN/gIl+VXZk+E=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = EditCard;\nexport default EditCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditCard\");","map":{"version":3,"sources":["/Users/kc/Thinkful/Project_Flashcards_Qualified_1/src/Layout/EditCard.js"],"names":["React","useEffect","useState","Link","useHistory","useParams","readDeck","updateCard","readCard","EditCard","history","deckId","cardId","state","front","back","updatedCard","setUpdatedCard","deck","setDeck","card","setCard","handleChange","event","target","name","value","abortController","AbortController","loadInfo","newDeck","signal","newCard","id","Number","abort","handleCancel","e","preventDefault","push","handleSubmit"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { Link, useHistory, useParams } from \"react-router-dom\";\nimport { readDeck, updateCard, readCard } from \"../utils/api\";\n\nfunction EditCard() {\n    const history = useHistory();\n    const {deckId,cardId} = useParams();\n\n    const state = {front: \"\", back: \"\"}\n    const [updatedCard, setUpdatedCard]= useState(state)\n    const [deck, setDeck] = useState({});\n    const [card, setCard] = useState({});\n\n    const handleChange = (event) => {\n        setUpdatedCard({ ...updatedCard, [event.target.name]: event.target.value });\n      };\n\n    //const [updatedDeck, setUpdatedDeck]= useState({});\n\n    // const [front, setFront] = useState(\"\")\n    // const [back, setBack] = useState(\"\")\n    // const [currentDeck, setCurrentDeck] = useState(null)\n    // const [currentCard, setCurrentCard] = useState(null)\n\nuseEffect (()=> {\n    const abortController= new AbortController();\n    const loadInfo = async ()=> {\n        const newDeck = await readDeck(deckId, abortController.signal);\n        const newCard= await readCard(cardId)\n        setDeck(() => newDeck);\n      setCard(() => newCard);\n      setUpdatedCard({\n        id: cardId,\n        front: newCard.front,\n        back: newCard.back,\n        deckId: Number(deckId),\n      });\n    };\n    loadInfo();\n    return () => abortController.abort();\n  }, [deckId, cardId]);\n\n\n    // useEffect(() => {\n    //     async function loadInfo(){\n    //         try {\n    //             const response = await readDeck(params.deckId);\n    //             setUpdatedDeck(response)\n    //             setUpdatedCard(response.cards.find((card) => (card.id + \"\") === params.cardId))\n    //             updatedCard((response.cards.find((card) => (card.id + \"\") === params.cardId)).front)\n    //             //setBack((response.cards.find((card) => (card.id + \"\") === params.cardId)).back)\n    //         } catch (error) {console.log(error)}\n    //     }\n    //     loadInfo()\n    // }, [params])\n\n    const handleCancel = (e) => {\n        e.preventDefault();\n        history.push(\"/\")\n    }\n    \n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        await updateCard(updatedCard);\n        history.push(`/decks/${deckId}`);\n      };\n    // const handleSubmit = async(e) => {\n    //     e.preventDefault();\n    //     const deck = await updateCard(updatedCard);\n    //         history.push(`/decks/${params.deck}`)\n    //     }\n   \n\n    if(updatedCard){\n        return (\n            <div>\n                <div>\n                    <Link to=\"/\">Home</Link> / <Link to={`/decks/${deckId}`}>{updatedCard.name}</Link>  / Edit Card {updatedCard.id}\n                </div>\n                <h2>Edit Card</h2>\n                <form onSubmit={handleSubmit}>\n                    <label>Front</label>\n                    <br />\n                    <textarea\n                    required\n                    value={updatedCard.front}\n                    onChange={(e) => setUpdatedCard(e.target.value)}\n                    />\n                    <br />\n                    <label>Back</label>\n                    <br />\n                    <textarea\n                    required\n                    value={updatedCard.back}\n                    onChange={(e) => setUpdatedCard(e.target.value)}\n                    />\n                    <br />\n                    <button onClick={handleCancel}>Cancel</button>\n                    <button type=\"submit\">Submit</button>\n                </form>\n            </div>\n        )\n    }\n    return <p>Loading...</p>\n}\nexport default EditCard;"]},"metadata":{},"sourceType":"module"}